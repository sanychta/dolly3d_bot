###########################################################
#
# Copyright (c) 2005, Southpaw Technology
#                     All Rights Reserved
#
# PROPRIETARY INFORMATION.  This software is proprietary to
# Southpaw Technology, and is not to be reproduced, transmitted,
# or disclosed in any way without written permission.
#
#
#

__all__ = ['Render', 'RenderPolicy']

from pyasm.common import Environment
from pyasm.biz import *
from pyasm.search import *

class Render(SObject):

    SEARCH_TYPE = "prod/render"

    def get_defaults(self):
        # TODO: autogenerate code

        defaults = {
            "login": Environment.get_user_name()
        }
        return defaults


    # static methods

    def create(sobject, context):
        render = SObjectFactory.create( Render.SEARCH_TYPE )
        render.set_value("search_type", sobject.get_search_type())
        render.set_value("search_id", sobject.get_id())
        render.set_user()
        render.commit()

        # TODO: Autogenerated code

        return render
    create = staticmethod(create)



    # DEPRECATED
    def XX_create(sobject, snapshot, session, file_range, version=1):
        render = SObjectFactory.create( Render.SEARCH_TYPE )
        render.set_value("search_type", sobject.get_search_type())
        render.set_value("search_id", sobject.get_id())

        if snapshot:
            render.set_value("snapshot_code", snapshot.get_code() )
        render.set_value("session", session)
        if version == -1:
            last_render = Render.get_last(sobject)
            if last_render:
                try:
                    version = int(last_render.get_value('version')) + 1
                except:
                    version = 1
            else:
                version = 1
        render.set_value("version", str(version))

        render.set_value("file_range", file_range)
        render.set_user()
        render.commit()
        return render
    create = staticmethod(create)


    def get_last(sobject):
        '''TODO: this is pointless now since render only references to 1 sobject. The snapshot
        of this render is versioned up instead'''
        search = Search( Render.SEARCH_TYPE )
        search.add_filter("search_type", sobject.get_search_type() )
        search.add_filter("search_id", sobject.get_id() )
        render = search.get_sobject()
        return render
    get_last = staticmethod(get_last)


    def get_all_by_sobject(sobject):
        search = Search( Render.SEARCH_TYPE )
        search.add_filter("search_type", sobject.get_search_type() )
        search.add_filter("search_id", sobject.get_id() )
        renders = search.get_sobjects()
        return renders
    get_all_by_sobject = staticmethod(get_all_by_sobject)




class RenderPolicy(SObject):
    SEARCH_TYPE = "prod/render_policy"

    def get_resolution(self):
        try:
            width = int( self.get_value("width") )
            height = int( self.get_value("height") )
        except ValueError:
            width = 640
            height = 480

        return (width, height)






